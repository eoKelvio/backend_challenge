services:
  postgres: 
    image: postgres:16-alpine3.20
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schemas.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - senai

  mongodb:
    image: mongo
    ports:
      - '27017:27017'
    volumes:
      - ./mongo_data:/data/db
    networks:
      - senai
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}

  webhook:
    build: .
    ports: 
      - '9999:9999'
    networks:
      - senai
    depends_on:
      - rabbitmq
    volumes:
      - ./apis/webhook:/api
      - ${PRIVATE_KEY_PATH}:/secrets/private_key.pem:ro
    environment:
      PRIVATE_KEY_PATH: ${PRIVATE_KEY_PATH}
      PYTHONPATH: /api/app 
    command: ["fastapi", "run", "api/app/main.py", "--port", "9999"]

  storage:
    build: .
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PYTHONPATH: /api/app
    ports:
      - '9998:9998'
    volumes:
      - ./apis/storage:/api
    networks:
      - senai
    depends_on:
      - postgres
      - rabbitmq
    command: ["fastapi", "run", "api/app/main.py", "--port", "9998"]

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - senai

networks:
  senai:
    driver: bridge

volumes:
  postgres_data:
